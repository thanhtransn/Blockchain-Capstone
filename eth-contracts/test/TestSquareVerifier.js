// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');

const truffleAssert = require('truffle-assertions');

const Proof = require("./proof/proof.json");
const IncorrectProof = require("./proof/incorrectProof.json");

contract('TestVerifier', accounts => {

    describe('verify the solidity contract generated by Zokrates', function () {
        beforeEach(async function () {
            this.contract = await Verifier.new({ from: accounts[0] });
        })

        // Test verification with correct proof
        it('should verify with correct proof', async function () {
            let eventResult = await this.contract.verifyTx(
                Proof.proof.a, Proof.proof.b, Proof.proof.c, Proof.inputs
            );

            truffleAssert.eventEmitted(eventResult, 'Verified', (ev) => {
                return ev.s == "Transaction successfully verified.";
            });

            let result = await this.contract.verifyTx.call(
                Proof.proof.a, Proof.proof.b, Proof.proof.c, Proof.inputs
            );
            assert.equal(result, true, "Unsuccessful verification with correct proof");
        });

        // Test verification with incorrect proof
        it('should not verify with incorrect proof', async function () {
            let result = await this.contract.verifyTx.call(
                IncorrectProof.proof.a, IncorrectProof.proof.b, IncorrectProof.proof.c, IncorrectProof.inputs
            );
            assert.equal(result, false, "Successful verification with incorrect proof");
        });
    })

})